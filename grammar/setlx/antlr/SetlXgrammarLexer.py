# Generated from SetlXgrammar.g4 by ANTLR 4.7.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2>")
        buf.write("\u0192\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5")
        buf.write("\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3")
        buf.write("\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\r\3\r")
        buf.write("\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3")
        buf.write("\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25")
        buf.write("\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30")
        buf.write("\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36")
        buf.write("\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3")
        buf.write("#\3#\3#\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3")
        buf.write("\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3.\3/\3/")
        buf.write("\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\61")
        buf.write("\3\61\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\64\3\64")
        buf.write("\3\64\3\64\3\64\3\64\3\65\3\65\7\65\u012d\n\65\f\65\16")
        buf.write("\65\u0130\13\65\3\66\3\66\3\66\7\66\u0135\n\66\f\66\16")
        buf.write("\66\u0138\13\66\5\66\u013a\n\66\3\67\5\67\u013d\n\67\3")
        buf.write("\67\3\67\6\67\u0141\n\67\r\67\16\67\u0142\3\67\3\67\5")
        buf.write("\67\u0147\n\67\3\67\6\67\u014a\n\67\r\67\16\67\u014b\5")
        buf.write("\67\u014e\n\67\38\38\38\39\39\39\39\79\u0157\n9\f9\16")
        buf.write("9\u015a\139\39\39\3:\3:\3:\3:\7:\u0162\n:\f:\16:\u0165")
        buf.write("\13:\3:\3:\3;\3;\3;\3;\7;\u016d\n;\f;\16;\u0170\13;\3")
        buf.write(";\3;\3<\3<\3<\3<\3<\6<\u0179\n<\r<\16<\u017a\3<\7<\u017e")
        buf.write("\n<\f<\16<\u0181\13<\3<\6<\u0184\n<\r<\16<\u0185\3<\3")
        buf.write("<\3<\3<\3=\6=\u018d\n=\r=\16=\u018e\3=\3=\2\2>\3\3\5\4")
        buf.write("\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17")
        buf.write("\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63")
        buf.write("\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-")
        buf.write("Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>\3\2")
        buf.write("\f\4\2C\\c|\6\2\62;C\\aac|\4\2GGgg\4\2--//\4\2$$^^\3\2")
        buf.write("))\4\2\f\f\17\17\3\2,,\4\2,,\61\61\5\2\13\f\17\17\"\"")
        buf.write("\2\u01a3\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2")
        buf.write("\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2")
        buf.write("\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2")
        buf.write("\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3")
        buf.write("\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2")
        buf.write("-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3")
        buf.write("\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2")
        buf.write("?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2")
        buf.write("\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2")
        buf.write("\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2")
        buf.write("\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3")
        buf.write("\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o")
        buf.write("\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2")
        buf.write("y\3\2\2\2\3{\3\2\2\2\5~\3\2\2\2\7\u0080\3\2\2\2\t\u0082")
        buf.write("\3\2\2\2\13\u0084\3\2\2\2\r\u0086\3\2\2\2\17\u008b\3\2")
        buf.write("\2\2\21\u008f\3\2\2\2\23\u0091\3\2\2\2\25\u0097\3\2\2")
        buf.write("\2\27\u009a\3\2\2\2\31\u009c\3\2\2\2\33\u00a6\3\2\2\2")
        buf.write("\35\u00ac\3\2\2\2\37\u00b5\3\2\2\2!\u00ba\3\2\2\2#\u00c1")
        buf.write("\3\2\2\2%\u00c4\3\2\2\2\'\u00c7\3\2\2\2)\u00ca\3\2\2\2")
        buf.write("+\u00cd\3\2\2\2-\u00d0\3\2\2\2/\u00d3\3\2\2\2\61\u00d6")
        buf.write("\3\2\2\2\63\u00d8\3\2\2\2\65\u00da\3\2\2\2\67\u00dc\3")
        buf.write("\2\2\29\u00de\3\2\2\2;\u00e0\3\2\2\2=\u00e3\3\2\2\2?\u00e6")
        buf.write("\3\2\2\2A\u00e9\3\2\2\2C\u00ec\3\2\2\2E\u00ee\3\2\2\2")
        buf.write("G\u00f1\3\2\2\2I\u00f3\3\2\2\2K\u00f6\3\2\2\2M\u00f9\3")
        buf.write("\2\2\2O\u00ff\3\2\2\2Q\u0101\3\2\2\2S\u0103\3\2\2\2U\u0105")
        buf.write("\3\2\2\2W\u0107\3\2\2\2Y\u0109\3\2\2\2[\u010b\3\2\2\2")
        buf.write("]\u010e\3\2\2\2_\u0110\3\2\2\2a\u011a\3\2\2\2c\u011c\3")
        buf.write("\2\2\2e\u011f\3\2\2\2g\u0124\3\2\2\2i\u012a\3\2\2\2k\u0139")
        buf.write("\3\2\2\2m\u013c\3\2\2\2o\u014f\3\2\2\2q\u0152\3\2\2\2")
        buf.write("s\u015d\3\2\2\2u\u0168\3\2\2\2w\u0173\3\2\2\2y\u018c\3")
        buf.write("\2\2\2{|\7k\2\2|}\7h\2\2}\4\3\2\2\2~\177\7*\2\2\177\6")
        buf.write("\3\2\2\2\u0080\u0081\7+\2\2\u0081\b\3\2\2\2\u0082\u0083")
        buf.write("\7}\2\2\u0083\n\3\2\2\2\u0084\u0085\7\177\2\2\u0085\f")
        buf.write("\3\2\2\2\u0086\u0087\7g\2\2\u0087\u0088\7n\2\2\u0088\u0089")
        buf.write("\7u\2\2\u0089\u008a\7g\2\2\u008a\16\3\2\2\2\u008b\u008c")
        buf.write("\7h\2\2\u008c\u008d\7q\2\2\u008d\u008e\7t\2\2\u008e\20")
        buf.write("\3\2\2\2\u008f\u0090\7~\2\2\u0090\22\3\2\2\2\u0091\u0092")
        buf.write("\7y\2\2\u0092\u0093\7j\2\2\u0093\u0094\7k\2\2\u0094\u0095")
        buf.write("\7n\2\2\u0095\u0096\7g\2\2\u0096\24\3\2\2\2\u0097\u0098")
        buf.write("\7f\2\2\u0098\u0099\7q\2\2\u0099\26\3\2\2\2\u009a\u009b")
        buf.write("\7=\2\2\u009b\30\3\2\2\2\u009c\u009d\7d\2\2\u009d\u009e")
        buf.write("\7c\2\2\u009e\u009f\7e\2\2\u009f\u00a0\7m\2\2\u00a0\u00a1")
        buf.write("\7v\2\2\u00a1\u00a2\7t\2\2\u00a2\u00a3\7c\2\2\u00a3\u00a4")
        buf.write("\7e\2\2\u00a4\u00a5\7m\2\2\u00a5\32\3\2\2\2\u00a6\u00a7")
        buf.write("\7d\2\2\u00a7\u00a8\7t\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa")
        buf.write("\7c\2\2\u00aa\u00ab\7m\2\2\u00ab\34\3\2\2\2\u00ac\u00ad")
        buf.write("\7e\2\2\u00ad\u00ae\7q\2\2\u00ae\u00af\7p\2\2\u00af\u00b0")
        buf.write("\7v\2\2\u00b0\u00b1\7k\2\2\u00b1\u00b2\7p\2\2\u00b2\u00b3")
        buf.write("\7w\2\2\u00b3\u00b4\7g\2\2\u00b4\36\3\2\2\2\u00b5\u00b6")
        buf.write("\7g\2\2\u00b6\u00b7\7z\2\2\u00b7\u00b8\7k\2\2\u00b8\u00b9")
        buf.write("\7v\2\2\u00b9 \3\2\2\2\u00ba\u00bb\7t\2\2\u00bb\u00bc")
        buf.write("\7g\2\2\u00bc\u00bd\7v\2\2\u00bd\u00be\7w\2\2\u00be\u00bf")
        buf.write("\7t\2\2\u00bf\u00c0\7p\2\2\u00c0\"\3\2\2\2\u00c1\u00c2")
        buf.write("\7-\2\2\u00c2\u00c3\7?\2\2\u00c3$\3\2\2\2\u00c4\u00c5")
        buf.write("\7/\2\2\u00c5\u00c6\7?\2\2\u00c6&\3\2\2\2\u00c7\u00c8")
        buf.write("\7,\2\2\u00c8\u00c9\7?\2\2\u00c9(\3\2\2\2\u00ca\u00cb")
        buf.write("\7\61\2\2\u00cb\u00cc\7?\2\2\u00cc*\3\2\2\2\u00cd\u00ce")
        buf.write("\7^\2\2\u00ce\u00cf\7?\2\2\u00cf,\3\2\2\2\u00d0\u00d1")
        buf.write("\7\'\2\2\u00d1\u00d2\7?\2\2\u00d2.\3\2\2\2\u00d3\u00d4")
        buf.write("\7<\2\2\u00d4\u00d5\7?\2\2\u00d5\60\3\2\2\2\u00d6\u00d7")
        buf.write("\7\60\2\2\u00d7\62\3\2\2\2\u00d8\u00d9\7]\2\2\u00d9\64")
        buf.write("\3\2\2\2\u00da\u00db\7_\2\2\u00db\66\3\2\2\2\u00dc\u00dd")
        buf.write("\7a\2\2\u00dd8\3\2\2\2\u00de\u00df\7.\2\2\u00df:\3\2\2")
        buf.write("\2\u00e0\u00e1\7~\2\2\u00e1\u00e2\7~\2\2\u00e2<\3\2\2")
        buf.write("\2\u00e3\u00e4\7(\2\2\u00e4\u00e5\7(\2\2\u00e5>\3\2\2")
        buf.write("\2\u00e6\u00e7\7?\2\2\u00e7\u00e8\7?\2\2\u00e8@\3\2\2")
        buf.write("\2\u00e9\u00ea\7#\2\2\u00ea\u00eb\7?\2\2\u00ebB\3\2\2")
        buf.write("\2\u00ec\u00ed\7>\2\2\u00edD\3\2\2\2\u00ee\u00ef\7>\2")
        buf.write("\2\u00ef\u00f0\7?\2\2\u00f0F\3\2\2\2\u00f1\u00f2\7@\2")
        buf.write("\2\u00f2H\3\2\2\2\u00f3\u00f4\7@\2\2\u00f4\u00f5\7?\2")
        buf.write("\2\u00f5J\3\2\2\2\u00f6\u00f7\7k\2\2\u00f7\u00f8\7p\2")
        buf.write("\2\u00f8L\3\2\2\2\u00f9\u00fa\7p\2\2\u00fa\u00fb\7q\2")
        buf.write("\2\u00fb\u00fc\7v\2\2\u00fc\u00fd\7k\2\2\u00fd\u00fe\7")
        buf.write("p\2\2\u00feN\3\2\2\2\u00ff\u0100\7-\2\2\u0100P\3\2\2\2")
        buf.write("\u0101\u0102\7/\2\2\u0102R\3\2\2\2\u0103\u0104\7,\2\2")
        buf.write("\u0104T\3\2\2\2\u0105\u0106\7\61\2\2\u0106V\3\2\2\2\u0107")
        buf.write("\u0108\7^\2\2\u0108X\3\2\2\2\u0109\u010a\7\'\2\2\u010a")
        buf.write("Z\3\2\2\2\u010b\u010c\7,\2\2\u010c\u010d\7,\2\2\u010d")
        buf.write("\\\3\2\2\2\u010e\u010f\7#\2\2\u010f^\3\2\2\2\u0110\u0111")
        buf.write("\7r\2\2\u0111\u0112\7t\2\2\u0112\u0113\7q\2\2\u0113\u0114")
        buf.write("\7e\2\2\u0114\u0115\7g\2\2\u0115\u0116\7f\2\2\u0116\u0117")
        buf.write("\7w\2\2\u0117\u0118\7t\2\2\u0118\u0119\7g\2\2\u0119`\3")
        buf.write("\2\2\2\u011a\u011b\7<\2\2\u011bb\3\2\2\2\u011c\u011d\7")
        buf.write("q\2\2\u011d\u011e\7o\2\2\u011ed\3\2\2\2\u011f\u0120\7")
        buf.write("V\2\2\u0120\u0121\7t\2\2\u0121\u0122\7w\2\2\u0122\u0123")
        buf.write("\7g\2\2\u0123f\3\2\2\2\u0124\u0125\7H\2\2\u0125\u0126")
        buf.write("\7c\2\2\u0126\u0127\7n\2\2\u0127\u0128\7u\2\2\u0128\u0129")
        buf.write("\7g\2\2\u0129h\3\2\2\2\u012a\u012e\t\2\2\2\u012b\u012d")
        buf.write("\t\3\2\2\u012c\u012b\3\2\2\2\u012d\u0130\3\2\2\2\u012e")
        buf.write("\u012c\3\2\2\2\u012e\u012f\3\2\2\2\u012fj\3\2\2\2\u0130")
        buf.write("\u012e\3\2\2\2\u0131\u013a\7\62\2\2\u0132\u0136\4\63;")
        buf.write("\2\u0133\u0135\4\62;\2\u0134\u0133\3\2\2\2\u0135\u0138")
        buf.write("\3\2\2\2\u0136\u0134\3\2\2\2\u0136\u0137\3\2\2\2\u0137")
        buf.write("\u013a\3\2\2\2\u0138\u0136\3\2\2\2\u0139\u0131\3\2\2\2")
        buf.write("\u0139\u0132\3\2\2\2\u013al\3\2\2\2\u013b\u013d\5k\66")
        buf.write("\2\u013c\u013b\3\2\2\2\u013c\u013d\3\2\2\2\u013d\u013e")
        buf.write("\3\2\2\2\u013e\u0140\7\60\2\2\u013f\u0141\4\62;\2\u0140")
        buf.write("\u013f\3\2\2\2\u0141\u0142\3\2\2\2\u0142\u0140\3\2\2\2")
        buf.write("\u0142\u0143\3\2\2\2\u0143\u014d\3\2\2\2\u0144\u0146\t")
        buf.write("\4\2\2\u0145\u0147\t\5\2\2\u0146\u0145\3\2\2\2\u0146\u0147")
        buf.write("\3\2\2\2\u0147\u0149\3\2\2\2\u0148\u014a\4\62;\2\u0149")
        buf.write("\u0148\3\2\2\2\u014a\u014b\3\2\2\2\u014b\u0149\3\2\2\2")
        buf.write("\u014b\u014c\3\2\2\2\u014c\u014e\3\2\2\2\u014d\u0144\3")
        buf.write("\2\2\2\u014d\u014e\3\2\2\2\u014en\3\2\2\2\u014f\u0150")
        buf.write("\7\60\2\2\u0150\u0151\7\60\2\2\u0151p\3\2\2\2\u0152\u0158")
        buf.write("\7$\2\2\u0153\u0154\7^\2\2\u0154\u0157\13\2\2\2\u0155")
        buf.write("\u0157\n\6\2\2\u0156\u0153\3\2\2\2\u0156\u0155\3\2\2\2")
        buf.write("\u0157\u015a\3\2\2\2\u0158\u0156\3\2\2\2\u0158\u0159\3")
        buf.write("\2\2\2\u0159\u015b\3\2\2\2\u015a\u0158\3\2\2\2\u015b\u015c")
        buf.write("\7$\2\2\u015cr\3\2\2\2\u015d\u0163\7)\2\2\u015e\u015f")
        buf.write("\7)\2\2\u015f\u0162\7)\2\2\u0160\u0162\n\7\2\2\u0161\u015e")
        buf.write("\3\2\2\2\u0161\u0160\3\2\2\2\u0162\u0165\3\2\2\2\u0163")
        buf.write("\u0161\3\2\2\2\u0163\u0164\3\2\2\2\u0164\u0166\3\2\2\2")
        buf.write("\u0165\u0163\3\2\2\2\u0166\u0167\7)\2\2\u0167t\3\2\2\2")
        buf.write("\u0168\u0169\7\61\2\2\u0169\u016a\7\61\2\2\u016a\u016e")
        buf.write("\3\2\2\2\u016b\u016d\n\b\2\2\u016c\u016b\3\2\2\2\u016d")
        buf.write("\u0170\3\2\2\2\u016e\u016c\3\2\2\2\u016e\u016f\3\2\2\2")
        buf.write("\u016f\u0171\3\2\2\2\u0170\u016e\3\2\2\2\u0171\u0172\b")
        buf.write(";\2\2\u0172v\3\2\2\2\u0173\u0174\7\61\2\2\u0174\u0175")
        buf.write("\7,\2\2\u0175\u017f\3\2\2\2\u0176\u017e\n\t\2\2\u0177")
        buf.write("\u0179\7,\2\2\u0178\u0177\3\2\2\2\u0179\u017a\3\2\2\2")
        buf.write("\u017a\u0178\3\2\2\2\u017a\u017b\3\2\2\2\u017b\u017c\3")
        buf.write("\2\2\2\u017c\u017e\n\n\2\2\u017d\u0176\3\2\2\2\u017d\u0178")
        buf.write("\3\2\2\2\u017e\u0181\3\2\2\2\u017f\u017d\3\2\2\2\u017f")
        buf.write("\u0180\3\2\2\2\u0180\u0183\3\2\2\2\u0181\u017f\3\2\2\2")
        buf.write("\u0182\u0184\7,\2\2\u0183\u0182\3\2\2\2\u0184\u0185\3")
        buf.write("\2\2\2\u0185\u0183\3\2\2\2\u0185\u0186\3\2\2\2\u0186\u0187")
        buf.write("\3\2\2\2\u0187\u0188\7\61\2\2\u0188\u0189\3\2\2\2\u0189")
        buf.write("\u018a\b<\2\2\u018ax\3\2\2\2\u018b\u018d\t\13\2\2\u018c")
        buf.write("\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018e\u018c\3\2\2\2")
        buf.write("\u018e\u018f\3\2\2\2\u018f\u0190\3\2\2\2\u0190\u0191\b")
        buf.write("=\2\2\u0191z\3\2\2\2\25\2\u012e\u0136\u0139\u013c\u0142")
        buf.write("\u0146\u014b\u014d\u0156\u0158\u0161\u0163\u016e\u017a")
        buf.write("\u017d\u017f\u0185\u018e\3\b\2\2")
        return buf.getvalue()


class SetlXgrammarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    ID = 52
    NUMBER = 53
    DOUBLE = 54
    RANGE_SIGN = 55
    STRING = 56
    LITERAL = 57
    LINE_COMMENT = 58
    MULTI_COMMENT = 59
    WS = 60

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'if'", "'('", "')'", "'{'", "'}'", "'else'", "'for'", "'|'", 
            "'while'", "'do'", "';'", "'backtrack'", "'break'", "'continue'", 
            "'exit'", "'return'", "'+='", "'-='", "'*='", "'/='", "'\\='", 
            "'%='", "':='", "'.'", "'['", "']'", "'_'", "','", "'||'", "'&&'", 
            "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'in'", "'notin'", 
            "'+'", "'-'", "'*'", "'/'", "'\\'", "'%'", "'**'", "'!'", "'procedure'", 
            "':'", "'om'", "'True'", "'False'", "'..'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "NUMBER", "DOUBLE", "RANGE_SIGN", "STRING", "LITERAL", 
            "LINE_COMMENT", "MULTI_COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "ID", "NUMBER", "DOUBLE", "RANGE_SIGN", "STRING", 
                  "LITERAL", "LINE_COMMENT", "MULTI_COMMENT", "WS" ]

    grammarFileName = "SetlXgrammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


