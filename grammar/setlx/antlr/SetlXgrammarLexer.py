# Generated from SetlXgrammar.g4 by ANTLR 4.7.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2=")
        buf.write("\u018e\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3")
        buf.write("\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\n\3\n")
        buf.write("\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3")
        buf.write("\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3")
        buf.write("\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25")
        buf.write("\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31")
        buf.write("\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36")
        buf.write("\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3#\3#\3")
        buf.write("#\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3(\3")
        buf.write("(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3.\3/\3/\3\60\3")
        buf.write("\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61")
        buf.write("\3\61\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63")
        buf.write("\3\63\3\64\3\64\7\64\u0129\n\64\f\64\16\64\u012c\13\64")
        buf.write("\3\65\3\65\3\65\7\65\u0131\n\65\f\65\16\65\u0134\13\65")
        buf.write("\5\65\u0136\n\65\3\66\5\66\u0139\n\66\3\66\3\66\6\66\u013d")
        buf.write("\n\66\r\66\16\66\u013e\3\66\3\66\5\66\u0143\n\66\3\66")
        buf.write("\6\66\u0146\n\66\r\66\16\66\u0147\5\66\u014a\n\66\3\67")
        buf.write("\3\67\3\67\38\38\38\38\78\u0153\n8\f8\168\u0156\138\3")
        buf.write("8\38\39\39\39\39\79\u015e\n9\f9\169\u0161\139\39\39\3")
        buf.write(":\3:\3:\3:\7:\u0169\n:\f:\16:\u016c\13:\3:\3:\3;\3;\3")
        buf.write(";\3;\3;\6;\u0175\n;\r;\16;\u0176\3;\7;\u017a\n;\f;\16")
        buf.write(";\u017d\13;\3;\6;\u0180\n;\r;\16;\u0181\3;\3;\3;\3;\3")
        buf.write("<\6<\u0189\n<\r<\16<\u018a\3<\3<\2\2=\3\3\5\4\7\5\t\6")
        buf.write("\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60")
        buf.write("_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=\3\2\f\4\2C\\")
        buf.write("c|\6\2\62;C\\aac|\4\2GGgg\4\2--//\4\2$$^^\3\2))\4\2\f")
        buf.write("\f\17\17\3\2,,\4\2,,\61\61\5\2\13\f\17\17\"\"\2\u019f")
        buf.write("\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13")
        buf.write("\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3")
        buf.write("\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2")
        buf.write("\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2")
        buf.write("%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2")
        buf.write("\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2")
        buf.write("\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3")
        buf.write("\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q")
        buf.write("\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\3y\3\2\2\2\5")
        buf.write("|\3\2\2\2\7~\3\2\2\2\t\u0080\3\2\2\2\13\u0082\3\2\2\2")
        buf.write("\r\u0084\3\2\2\2\17\u0089\3\2\2\2\21\u008d\3\2\2\2\23")
        buf.write("\u008f\3\2\2\2\25\u0095\3\2\2\2\27\u0098\3\2\2\2\31\u009a")
        buf.write("\3\2\2\2\33\u00a4\3\2\2\2\35\u00aa\3\2\2\2\37\u00b3\3")
        buf.write("\2\2\2!\u00b8\3\2\2\2#\u00bf\3\2\2\2%\u00c2\3\2\2\2\'")
        buf.write("\u00c5\3\2\2\2)\u00c8\3\2\2\2+\u00cb\3\2\2\2-\u00ce\3")
        buf.write("\2\2\2/\u00d1\3\2\2\2\61\u00d4\3\2\2\2\63\u00d6\3\2\2")
        buf.write("\2\65\u00d8\3\2\2\2\67\u00da\3\2\2\29\u00dc\3\2\2\2;\u00de")
        buf.write("\3\2\2\2=\u00e1\3\2\2\2?\u00e4\3\2\2\2A\u00e7\3\2\2\2")
        buf.write("C\u00ea\3\2\2\2E\u00ec\3\2\2\2G\u00ef\3\2\2\2I\u00f1\3")
        buf.write("\2\2\2K\u00f4\3\2\2\2M\u00f7\3\2\2\2O\u00fd\3\2\2\2Q\u00ff")
        buf.write("\3\2\2\2S\u0101\3\2\2\2U\u0103\3\2\2\2W\u0105\3\2\2\2")
        buf.write("Y\u0107\3\2\2\2[\u0109\3\2\2\2]\u010c\3\2\2\2_\u010e\3")
        buf.write("\2\2\2a\u0118\3\2\2\2c\u011b\3\2\2\2e\u0120\3\2\2\2g\u0126")
        buf.write("\3\2\2\2i\u0135\3\2\2\2k\u0138\3\2\2\2m\u014b\3\2\2\2")
        buf.write("o\u014e\3\2\2\2q\u0159\3\2\2\2s\u0164\3\2\2\2u\u016f\3")
        buf.write("\2\2\2w\u0188\3\2\2\2yz\7k\2\2z{\7h\2\2{\4\3\2\2\2|}\7")
        buf.write("*\2\2}\6\3\2\2\2~\177\7+\2\2\177\b\3\2\2\2\u0080\u0081")
        buf.write("\7}\2\2\u0081\n\3\2\2\2\u0082\u0083\7\177\2\2\u0083\f")
        buf.write("\3\2\2\2\u0084\u0085\7g\2\2\u0085\u0086\7n\2\2\u0086\u0087")
        buf.write("\7u\2\2\u0087\u0088\7g\2\2\u0088\16\3\2\2\2\u0089\u008a")
        buf.write("\7h\2\2\u008a\u008b\7q\2\2\u008b\u008c\7t\2\2\u008c\20")
        buf.write("\3\2\2\2\u008d\u008e\7~\2\2\u008e\22\3\2\2\2\u008f\u0090")
        buf.write("\7y\2\2\u0090\u0091\7j\2\2\u0091\u0092\7k\2\2\u0092\u0093")
        buf.write("\7n\2\2\u0093\u0094\7g\2\2\u0094\24\3\2\2\2\u0095\u0096")
        buf.write("\7f\2\2\u0096\u0097\7q\2\2\u0097\26\3\2\2\2\u0098\u0099")
        buf.write("\7=\2\2\u0099\30\3\2\2\2\u009a\u009b\7d\2\2\u009b\u009c")
        buf.write("\7c\2\2\u009c\u009d\7e\2\2\u009d\u009e\7m\2\2\u009e\u009f")
        buf.write("\7v\2\2\u009f\u00a0\7t\2\2\u00a0\u00a1\7c\2\2\u00a1\u00a2")
        buf.write("\7e\2\2\u00a2\u00a3\7m\2\2\u00a3\32\3\2\2\2\u00a4\u00a5")
        buf.write("\7d\2\2\u00a5\u00a6\7t\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8")
        buf.write("\7c\2\2\u00a8\u00a9\7m\2\2\u00a9\34\3\2\2\2\u00aa\u00ab")
        buf.write("\7e\2\2\u00ab\u00ac\7q\2\2\u00ac\u00ad\7p\2\2\u00ad\u00ae")
        buf.write("\7v\2\2\u00ae\u00af\7k\2\2\u00af\u00b0\7p\2\2\u00b0\u00b1")
        buf.write("\7w\2\2\u00b1\u00b2\7g\2\2\u00b2\36\3\2\2\2\u00b3\u00b4")
        buf.write("\7g\2\2\u00b4\u00b5\7z\2\2\u00b5\u00b6\7k\2\2\u00b6\u00b7")
        buf.write("\7v\2\2\u00b7 \3\2\2\2\u00b8\u00b9\7t\2\2\u00b9\u00ba")
        buf.write("\7g\2\2\u00ba\u00bb\7v\2\2\u00bb\u00bc\7w\2\2\u00bc\u00bd")
        buf.write("\7t\2\2\u00bd\u00be\7p\2\2\u00be\"\3\2\2\2\u00bf\u00c0")
        buf.write("\7-\2\2\u00c0\u00c1\7?\2\2\u00c1$\3\2\2\2\u00c2\u00c3")
        buf.write("\7/\2\2\u00c3\u00c4\7?\2\2\u00c4&\3\2\2\2\u00c5\u00c6")
        buf.write("\7,\2\2\u00c6\u00c7\7?\2\2\u00c7(\3\2\2\2\u00c8\u00c9")
        buf.write("\7\61\2\2\u00c9\u00ca\7?\2\2\u00ca*\3\2\2\2\u00cb\u00cc")
        buf.write("\7^\2\2\u00cc\u00cd\7?\2\2\u00cd,\3\2\2\2\u00ce\u00cf")
        buf.write("\7\'\2\2\u00cf\u00d0\7?\2\2\u00d0.\3\2\2\2\u00d1\u00d2")
        buf.write("\7<\2\2\u00d2\u00d3\7?\2\2\u00d3\60\3\2\2\2\u00d4\u00d5")
        buf.write("\7\60\2\2\u00d5\62\3\2\2\2\u00d6\u00d7\7]\2\2\u00d7\64")
        buf.write("\3\2\2\2\u00d8\u00d9\7_\2\2\u00d9\66\3\2\2\2\u00da\u00db")
        buf.write("\7a\2\2\u00db8\3\2\2\2\u00dc\u00dd\7.\2\2\u00dd:\3\2\2")
        buf.write("\2\u00de\u00df\7~\2\2\u00df\u00e0\7~\2\2\u00e0<\3\2\2")
        buf.write("\2\u00e1\u00e2\7(\2\2\u00e2\u00e3\7(\2\2\u00e3>\3\2\2")
        buf.write("\2\u00e4\u00e5\7?\2\2\u00e5\u00e6\7?\2\2\u00e6@\3\2\2")
        buf.write("\2\u00e7\u00e8\7#\2\2\u00e8\u00e9\7?\2\2\u00e9B\3\2\2")
        buf.write("\2\u00ea\u00eb\7>\2\2\u00ebD\3\2\2\2\u00ec\u00ed\7>\2")
        buf.write("\2\u00ed\u00ee\7?\2\2\u00eeF\3\2\2\2\u00ef\u00f0\7@\2")
        buf.write("\2\u00f0H\3\2\2\2\u00f1\u00f2\7@\2\2\u00f2\u00f3\7?\2")
        buf.write("\2\u00f3J\3\2\2\2\u00f4\u00f5\7k\2\2\u00f5\u00f6\7p\2")
        buf.write("\2\u00f6L\3\2\2\2\u00f7\u00f8\7p\2\2\u00f8\u00f9\7q\2")
        buf.write("\2\u00f9\u00fa\7v\2\2\u00fa\u00fb\7k\2\2\u00fb\u00fc\7")
        buf.write("p\2\2\u00fcN\3\2\2\2\u00fd\u00fe\7-\2\2\u00feP\3\2\2\2")
        buf.write("\u00ff\u0100\7/\2\2\u0100R\3\2\2\2\u0101\u0102\7,\2\2")
        buf.write("\u0102T\3\2\2\2\u0103\u0104\7\61\2\2\u0104V\3\2\2\2\u0105")
        buf.write("\u0106\7^\2\2\u0106X\3\2\2\2\u0107\u0108\7\'\2\2\u0108")
        buf.write("Z\3\2\2\2\u0109\u010a\7,\2\2\u010a\u010b\7,\2\2\u010b")
        buf.write("\\\3\2\2\2\u010c\u010d\7#\2\2\u010d^\3\2\2\2\u010e\u010f")
        buf.write("\7r\2\2\u010f\u0110\7t\2\2\u0110\u0111\7q\2\2\u0111\u0112")
        buf.write("\7e\2\2\u0112\u0113\7g\2\2\u0113\u0114\7f\2\2\u0114\u0115")
        buf.write("\7w\2\2\u0115\u0116\7t\2\2\u0116\u0117\7g\2\2\u0117`\3")
        buf.write("\2\2\2\u0118\u0119\7q\2\2\u0119\u011a\7o\2\2\u011ab\3")
        buf.write("\2\2\2\u011b\u011c\7V\2\2\u011c\u011d\7t\2\2\u011d\u011e")
        buf.write("\7w\2\2\u011e\u011f\7g\2\2\u011fd\3\2\2\2\u0120\u0121")
        buf.write("\7H\2\2\u0121\u0122\7c\2\2\u0122\u0123\7n\2\2\u0123\u0124")
        buf.write("\7u\2\2\u0124\u0125\7g\2\2\u0125f\3\2\2\2\u0126\u012a")
        buf.write("\t\2\2\2\u0127\u0129\t\3\2\2\u0128\u0127\3\2\2\2\u0129")
        buf.write("\u012c\3\2\2\2\u012a\u0128\3\2\2\2\u012a\u012b\3\2\2\2")
        buf.write("\u012bh\3\2\2\2\u012c\u012a\3\2\2\2\u012d\u0136\7\62\2")
        buf.write("\2\u012e\u0132\4\63;\2\u012f\u0131\4\62;\2\u0130\u012f")
        buf.write("\3\2\2\2\u0131\u0134\3\2\2\2\u0132\u0130\3\2\2\2\u0132")
        buf.write("\u0133\3\2\2\2\u0133\u0136\3\2\2\2\u0134\u0132\3\2\2\2")
        buf.write("\u0135\u012d\3\2\2\2\u0135\u012e\3\2\2\2\u0136j\3\2\2")
        buf.write("\2\u0137\u0139\5i\65\2\u0138\u0137\3\2\2\2\u0138\u0139")
        buf.write("\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u013c\7\60\2\2\u013b")
        buf.write("\u013d\4\62;\2\u013c\u013b\3\2\2\2\u013d\u013e\3\2\2\2")
        buf.write("\u013e\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013f\u0149\3")
        buf.write("\2\2\2\u0140\u0142\t\4\2\2\u0141\u0143\t\5\2\2\u0142\u0141")
        buf.write("\3\2\2\2\u0142\u0143\3\2\2\2\u0143\u0145\3\2\2\2\u0144")
        buf.write("\u0146\4\62;\2\u0145\u0144\3\2\2\2\u0146\u0147\3\2\2\2")
        buf.write("\u0147\u0145\3\2\2\2\u0147\u0148\3\2\2\2\u0148\u014a\3")
        buf.write("\2\2\2\u0149\u0140\3\2\2\2\u0149\u014a\3\2\2\2\u014al")
        buf.write("\3\2\2\2\u014b\u014c\7\60\2\2\u014c\u014d\7\60\2\2\u014d")
        buf.write("n\3\2\2\2\u014e\u0154\7$\2\2\u014f\u0150\7^\2\2\u0150")
        buf.write("\u0153\13\2\2\2\u0151\u0153\n\6\2\2\u0152\u014f\3\2\2")
        buf.write("\2\u0152\u0151\3\2\2\2\u0153\u0156\3\2\2\2\u0154\u0152")
        buf.write("\3\2\2\2\u0154\u0155\3\2\2\2\u0155\u0157\3\2\2\2\u0156")
        buf.write("\u0154\3\2\2\2\u0157\u0158\7$\2\2\u0158p\3\2\2\2\u0159")
        buf.write("\u015f\7)\2\2\u015a\u015b\7)\2\2\u015b\u015e\7)\2\2\u015c")
        buf.write("\u015e\n\7\2\2\u015d\u015a\3\2\2\2\u015d\u015c\3\2\2\2")
        buf.write("\u015e\u0161\3\2\2\2\u015f\u015d\3\2\2\2\u015f\u0160\3")
        buf.write("\2\2\2\u0160\u0162\3\2\2\2\u0161\u015f\3\2\2\2\u0162\u0163")
        buf.write("\7)\2\2\u0163r\3\2\2\2\u0164\u0165\7\61\2\2\u0165\u0166")
        buf.write("\7\61\2\2\u0166\u016a\3\2\2\2\u0167\u0169\n\b\2\2\u0168")
        buf.write("\u0167\3\2\2\2\u0169\u016c\3\2\2\2\u016a\u0168\3\2\2\2")
        buf.write("\u016a\u016b\3\2\2\2\u016b\u016d\3\2\2\2\u016c\u016a\3")
        buf.write("\2\2\2\u016d\u016e\b:\2\2\u016et\3\2\2\2\u016f\u0170\7")
        buf.write("\61\2\2\u0170\u0171\7,\2\2\u0171\u017b\3\2\2\2\u0172\u017a")
        buf.write("\n\t\2\2\u0173\u0175\7,\2\2\u0174\u0173\3\2\2\2\u0175")
        buf.write("\u0176\3\2\2\2\u0176\u0174\3\2\2\2\u0176\u0177\3\2\2\2")
        buf.write("\u0177\u0178\3\2\2\2\u0178\u017a\n\n\2\2\u0179\u0172\3")
        buf.write("\2\2\2\u0179\u0174\3\2\2\2\u017a\u017d\3\2\2\2\u017b\u0179")
        buf.write("\3\2\2\2\u017b\u017c\3\2\2\2\u017c\u017f\3\2\2\2\u017d")
        buf.write("\u017b\3\2\2\2\u017e\u0180\7,\2\2\u017f\u017e\3\2\2\2")
        buf.write("\u0180\u0181\3\2\2\2\u0181\u017f\3\2\2\2\u0181\u0182\3")
        buf.write("\2\2\2\u0182\u0183\3\2\2\2\u0183\u0184\7\61\2\2\u0184")
        buf.write("\u0185\3\2\2\2\u0185\u0186\b;\2\2\u0186v\3\2\2\2\u0187")
        buf.write("\u0189\t\13\2\2\u0188\u0187\3\2\2\2\u0189\u018a\3\2\2")
        buf.write("\2\u018a\u0188\3\2\2\2\u018a\u018b\3\2\2\2\u018b\u018c")
        buf.write("\3\2\2\2\u018c\u018d\b<\2\2\u018dx\3\2\2\2\25\2\u012a")
        buf.write("\u0132\u0135\u0138\u013e\u0142\u0147\u0149\u0152\u0154")
        buf.write("\u015d\u015f\u016a\u0176\u0179\u017b\u0181\u018a\3\b\2")
        buf.write("\2")
        return buf.getvalue()


class SetlXgrammarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    ID = 51
    NUMBER = 52
    DOUBLE = 53
    RANGE_SIGN = 54
    STRING = 55
    LITERAL = 56
    LINE_COMMENT = 57
    MULTI_COMMENT = 58
    WS = 59

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'if'", "'('", "')'", "'{'", "'}'", "'else'", "'for'", "'|'", 
            "'while'", "'do'", "';'", "'backtrack'", "'break'", "'continue'", 
            "'exit'", "'return'", "'+='", "'-='", "'*='", "'/='", "'\\='", 
            "'%='", "':='", "'.'", "'['", "']'", "'_'", "','", "'||'", "'&&'", 
            "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'in'", "'notin'", 
            "'+'", "'-'", "'*'", "'/'", "'\\'", "'%'", "'**'", "'!'", "'procedure'", 
            "'om'", "'True'", "'False'", "'..'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "NUMBER", "DOUBLE", "RANGE_SIGN", "STRING", "LITERAL", 
            "LINE_COMMENT", "MULTI_COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "ID", "NUMBER", "DOUBLE", "RANGE_SIGN", "STRING", "LITERAL", 
                  "LINE_COMMENT", "MULTI_COMMENT", "WS" ]

    grammarFileName = "SetlXgrammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


