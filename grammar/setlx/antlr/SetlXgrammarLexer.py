# Generated from SetlXgrammar.g4 by ANTLR 4.7.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2E")
        buf.write("\u01c4\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\4D\tD\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3")
        buf.write("\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t")
        buf.write("\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13")
        buf.write("\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3\16")
        buf.write("\3\16\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26")
        buf.write("\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31")
        buf.write("\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35")
        buf.write("\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3\"\3\"\3\"\3")
        buf.write("#\3#\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3")
        buf.write("(\3(\3(\3)\3)\3*\3*\3*\3+\3+\3,\3,\3,\3-\3-\3-\3.\3.\3")
        buf.write(".\3.\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3")
        buf.write("\63\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\67\3\67\3\67")
        buf.write("\3\67\3\67\3\67\3\67\3\67\3\67\3\67\38\38\38\39\39\39")
        buf.write("\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3;\3<\3<\7<\u015f\n<\f")
        buf.write("<\16<\u0162\13<\3=\3=\3=\7=\u0167\n=\f=\16=\u016a\13=")
        buf.write("\5=\u016c\n=\3>\5>\u016f\n>\3>\3>\6>\u0173\n>\r>\16>\u0174")
        buf.write("\3>\3>\5>\u0179\n>\3>\6>\u017c\n>\r>\16>\u017d\5>\u0180")
        buf.write("\n>\3?\3?\3?\3@\3@\3@\3@\7@\u0189\n@\f@\16@\u018c\13@")
        buf.write("\3@\3@\3A\3A\3A\3A\7A\u0194\nA\fA\16A\u0197\13A\3A\3A")
        buf.write("\3B\3B\3B\3B\7B\u019f\nB\fB\16B\u01a2\13B\3B\3B\3C\3C")
        buf.write("\3C\3C\3C\6C\u01ab\nC\rC\16C\u01ac\3C\7C\u01b0\nC\fC\16")
        buf.write("C\u01b3\13C\3C\6C\u01b6\nC\rC\16C\u01b7\3C\3C\3C\3C\3")
        buf.write("D\6D\u01bf\nD\rD\16D\u01c0\3D\3D\2\2E\3\3\5\4\7\5\t\6")
        buf.write("\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60")
        buf.write("_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081")
        buf.write("B\u0083C\u0085D\u0087E\3\2\f\4\2C\\c|\6\2\62;C\\aac|\4")
        buf.write("\2GGgg\4\2--//\4\2$$^^\3\2))\4\2\f\f\17\17\3\2,,\4\2,")
        buf.write(",\61\61\5\2\13\f\17\17\"\"\2\u01d5\2\3\3\2\2\2\2\5\3\2")
        buf.write("\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2")
        buf.write("\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2")
        buf.write("\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37")
        buf.write("\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2")
        buf.write("\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2")
        buf.write("\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2")
        buf.write("\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2")
        buf.write("\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2")
        buf.write("\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3")
        buf.write("\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a")
        buf.write("\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2")
        buf.write("k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2")
        buf.write("\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2")
        buf.write("\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085")
        buf.write("\3\2\2\2\2\u0087\3\2\2\2\3\u0089\3\2\2\2\5\u008c\3\2\2")
        buf.write("\2\7\u008e\3\2\2\2\t\u0090\3\2\2\2\13\u0092\3\2\2\2\r")
        buf.write("\u0094\3\2\2\2\17\u0099\3\2\2\2\21\u00a0\3\2\2\2\23\u00a5")
        buf.write("\3\2\2\2\25\u00a7\3\2\2\2\27\u00af\3\2\2\2\31\u00b3\3")
        buf.write("\2\2\2\33\u00b5\3\2\2\2\35\u00bb\3\2\2\2\37\u00be\3\2")
        buf.write("\2\2!\u00c0\3\2\2\2#\u00ca\3\2\2\2%\u00d0\3\2\2\2\'\u00d9")
        buf.write("\3\2\2\2)\u00de\3\2\2\2+\u00e5\3\2\2\2-\u00e8\3\2\2\2")
        buf.write("/\u00eb\3\2\2\2\61\u00ee\3\2\2\2\63\u00f1\3\2\2\2\65\u00f4")
        buf.write("\3\2\2\2\67\u00f7\3\2\2\29\u00fa\3\2\2\2;\u00fc\3\2\2")
        buf.write("\2=\u00fe\3\2\2\2?\u0100\3\2\2\2A\u0102\3\2\2\2C\u0104")
        buf.write("\3\2\2\2E\u0109\3\2\2\2G\u010e\3\2\2\2I\u0111\3\2\2\2")
        buf.write("K\u0114\3\2\2\2M\u0117\3\2\2\2O\u011a\3\2\2\2Q\u011d\3")
        buf.write("\2\2\2S\u011f\3\2\2\2U\u0122\3\2\2\2W\u0124\3\2\2\2Y\u0127")
        buf.write("\3\2\2\2[\u012a\3\2\2\2]\u0130\3\2\2\2_\u0132\3\2\2\2")
        buf.write("a\u0134\3\2\2\2c\u0136\3\2\2\2e\u0138\3\2\2\2g\u013a\3")
        buf.write("\2\2\2i\u013c\3\2\2\2k\u013f\3\2\2\2m\u0141\3\2\2\2o\u014b")
        buf.write("\3\2\2\2q\u014e\3\2\2\2s\u0151\3\2\2\2u\u0156\3\2\2\2")
        buf.write("w\u015c\3\2\2\2y\u016b\3\2\2\2{\u016e\3\2\2\2}\u0181\3")
        buf.write("\2\2\2\177\u0184\3\2\2\2\u0081\u018f\3\2\2\2\u0083\u019a")
        buf.write("\3\2\2\2\u0085\u01a5\3\2\2\2\u0087\u01be\3\2\2\2\u0089")
        buf.write("\u008a\7k\2\2\u008a\u008b\7h\2\2\u008b\4\3\2\2\2\u008c")
        buf.write("\u008d\7*\2\2\u008d\6\3\2\2\2\u008e\u008f\7+\2\2\u008f")
        buf.write("\b\3\2\2\2\u0090\u0091\7}\2\2\u0091\n\3\2\2\2\u0092\u0093")
        buf.write("\7\177\2\2\u0093\f\3\2\2\2\u0094\u0095\7g\2\2\u0095\u0096")
        buf.write("\7n\2\2\u0096\u0097\7u\2\2\u0097\u0098\7g\2\2\u0098\16")
        buf.write("\3\2\2\2\u0099\u009a\7u\2\2\u009a\u009b\7y\2\2\u009b\u009c")
        buf.write("\7k\2\2\u009c\u009d\7v\2\2\u009d\u009e\7e\2\2\u009e\u009f")
        buf.write("\7j\2\2\u009f\20\3\2\2\2\u00a0\u00a1\7e\2\2\u00a1\u00a2")
        buf.write("\7c\2\2\u00a2\u00a3\7u\2\2\u00a3\u00a4\7g\2\2\u00a4\22")
        buf.write("\3\2\2\2\u00a5\u00a6\7<\2\2\u00a6\24\3\2\2\2\u00a7\u00a8")
        buf.write("\7f\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa\7h\2\2\u00aa\u00ab")
        buf.write("\7c\2\2\u00ab\u00ac\7w\2\2\u00ac\u00ad\7n\2\2\u00ad\u00ae")
        buf.write("\7v\2\2\u00ae\26\3\2\2\2\u00af\u00b0\7h\2\2\u00b0\u00b1")
        buf.write("\7q\2\2\u00b1\u00b2\7t\2\2\u00b2\30\3\2\2\2\u00b3\u00b4")
        buf.write("\7~\2\2\u00b4\32\3\2\2\2\u00b5\u00b6\7y\2\2\u00b6\u00b7")
        buf.write("\7j\2\2\u00b7\u00b8\7k\2\2\u00b8\u00b9\7n\2\2\u00b9\u00ba")
        buf.write("\7g\2\2\u00ba\34\3\2\2\2\u00bb\u00bc\7f\2\2\u00bc\u00bd")
        buf.write("\7q\2\2\u00bd\36\3\2\2\2\u00be\u00bf\7=\2\2\u00bf \3\2")
        buf.write("\2\2\u00c0\u00c1\7d\2\2\u00c1\u00c2\7c\2\2\u00c2\u00c3")
        buf.write("\7e\2\2\u00c3\u00c4\7m\2\2\u00c4\u00c5\7v\2\2\u00c5\u00c6")
        buf.write("\7t\2\2\u00c6\u00c7\7c\2\2\u00c7\u00c8\7e\2\2\u00c8\u00c9")
        buf.write("\7m\2\2\u00c9\"\3\2\2\2\u00ca\u00cb\7d\2\2\u00cb\u00cc")
        buf.write("\7t\2\2\u00cc\u00cd\7g\2\2\u00cd\u00ce\7c\2\2\u00ce\u00cf")
        buf.write("\7m\2\2\u00cf$\3\2\2\2\u00d0\u00d1\7e\2\2\u00d1\u00d2")
        buf.write("\7q\2\2\u00d2\u00d3\7p\2\2\u00d3\u00d4\7v\2\2\u00d4\u00d5")
        buf.write("\7k\2\2\u00d5\u00d6\7p\2\2\u00d6\u00d7\7w\2\2\u00d7\u00d8")
        buf.write("\7g\2\2\u00d8&\3\2\2\2\u00d9\u00da\7g\2\2\u00da\u00db")
        buf.write("\7z\2\2\u00db\u00dc\7k\2\2\u00dc\u00dd\7v\2\2\u00dd(\3")
        buf.write("\2\2\2\u00de\u00df\7t\2\2\u00df\u00e0\7g\2\2\u00e0\u00e1")
        buf.write("\7v\2\2\u00e1\u00e2\7w\2\2\u00e2\u00e3\7t\2\2\u00e3\u00e4")
        buf.write("\7p\2\2\u00e4*\3\2\2\2\u00e5\u00e6\7-\2\2\u00e6\u00e7")
        buf.write("\7?\2\2\u00e7,\3\2\2\2\u00e8\u00e9\7/\2\2\u00e9\u00ea")
        buf.write("\7?\2\2\u00ea.\3\2\2\2\u00eb\u00ec\7,\2\2\u00ec\u00ed")
        buf.write("\7?\2\2\u00ed\60\3\2\2\2\u00ee\u00ef\7\61\2\2\u00ef\u00f0")
        buf.write("\7?\2\2\u00f0\62\3\2\2\2\u00f1\u00f2\7^\2\2\u00f2\u00f3")
        buf.write("\7?\2\2\u00f3\64\3\2\2\2\u00f4\u00f5\7\'\2\2\u00f5\u00f6")
        buf.write("\7?\2\2\u00f6\66\3\2\2\2\u00f7\u00f8\7<\2\2\u00f8\u00f9")
        buf.write("\7?\2\2\u00f98\3\2\2\2\u00fa\u00fb\7\60\2\2\u00fb:\3\2")
        buf.write("\2\2\u00fc\u00fd\7]\2\2\u00fd<\3\2\2\2\u00fe\u00ff\7_")
        buf.write("\2\2\u00ff>\3\2\2\2\u0100\u0101\7a\2\2\u0101@\3\2\2\2")
        buf.write("\u0102\u0103\7.\2\2\u0103B\3\2\2\2\u0104\u0105\7>\2\2")
        buf.write("\u0105\u0106\7?\2\2\u0106\u0107\7?\2\2\u0107\u0108\7@")
        buf.write("\2\2\u0108D\3\2\2\2\u0109\u010a\7>\2\2\u010a\u010b\7#")
        buf.write("\2\2\u010b\u010c\7?\2\2\u010c\u010d\7@\2\2\u010dF\3\2")
        buf.write("\2\2\u010e\u010f\7?\2\2\u010f\u0110\7@\2\2\u0110H\3\2")
        buf.write("\2\2\u0111\u0112\7~\2\2\u0112\u0113\7~\2\2\u0113J\3\2")
        buf.write("\2\2\u0114\u0115\7(\2\2\u0115\u0116\7(\2\2\u0116L\3\2")
        buf.write("\2\2\u0117\u0118\7?\2\2\u0118\u0119\7?\2\2\u0119N\3\2")
        buf.write("\2\2\u011a\u011b\7#\2\2\u011b\u011c\7?\2\2\u011cP\3\2")
        buf.write("\2\2\u011d\u011e\7>\2\2\u011eR\3\2\2\2\u011f\u0120\7>")
        buf.write("\2\2\u0120\u0121\7?\2\2\u0121T\3\2\2\2\u0122\u0123\7@")
        buf.write("\2\2\u0123V\3\2\2\2\u0124\u0125\7@\2\2\u0125\u0126\7?")
        buf.write("\2\2\u0126X\3\2\2\2\u0127\u0128\7k\2\2\u0128\u0129\7p")
        buf.write("\2\2\u0129Z\3\2\2\2\u012a\u012b\7p\2\2\u012b\u012c\7q")
        buf.write("\2\2\u012c\u012d\7v\2\2\u012d\u012e\7k\2\2\u012e\u012f")
        buf.write("\7p\2\2\u012f\\\3\2\2\2\u0130\u0131\7-\2\2\u0131^\3\2")
        buf.write("\2\2\u0132\u0133\7/\2\2\u0133`\3\2\2\2\u0134\u0135\7,")
        buf.write("\2\2\u0135b\3\2\2\2\u0136\u0137\7\61\2\2\u0137d\3\2\2")
        buf.write("\2\u0138\u0139\7^\2\2\u0139f\3\2\2\2\u013a\u013b\7\'\2")
        buf.write("\2\u013bh\3\2\2\2\u013c\u013d\7,\2\2\u013d\u013e\7,\2")
        buf.write("\2\u013ej\3\2\2\2\u013f\u0140\7#\2\2\u0140l\3\2\2\2\u0141")
        buf.write("\u0142\7r\2\2\u0142\u0143\7t\2\2\u0143\u0144\7q\2\2\u0144")
        buf.write("\u0145\7e\2\2\u0145\u0146\7g\2\2\u0146\u0147\7f\2\2\u0147")
        buf.write("\u0148\7w\2\2\u0148\u0149\7t\2\2\u0149\u014a\7g\2\2\u014a")
        buf.write("n\3\2\2\2\u014b\u014c\7t\2\2\u014c\u014d\7y\2\2\u014d")
        buf.write("p\3\2\2\2\u014e\u014f\7q\2\2\u014f\u0150\7o\2\2\u0150")
        buf.write("r\3\2\2\2\u0151\u0152\7v\2\2\u0152\u0153\7t\2\2\u0153")
        buf.write("\u0154\7w\2\2\u0154\u0155\7g\2\2\u0155t\3\2\2\2\u0156")
        buf.write("\u0157\7h\2\2\u0157\u0158\7c\2\2\u0158\u0159\7n\2\2\u0159")
        buf.write("\u015a\7u\2\2\u015a\u015b\7g\2\2\u015bv\3\2\2\2\u015c")
        buf.write("\u0160\t\2\2\2\u015d\u015f\t\3\2\2\u015e\u015d\3\2\2\2")
        buf.write("\u015f\u0162\3\2\2\2\u0160\u015e\3\2\2\2\u0160\u0161\3")
        buf.write("\2\2\2\u0161x\3\2\2\2\u0162\u0160\3\2\2\2\u0163\u016c")
        buf.write("\7\62\2\2\u0164\u0168\4\63;\2\u0165\u0167\4\62;\2\u0166")
        buf.write("\u0165\3\2\2\2\u0167\u016a\3\2\2\2\u0168\u0166\3\2\2\2")
        buf.write("\u0168\u0169\3\2\2\2\u0169\u016c\3\2\2\2\u016a\u0168\3")
        buf.write("\2\2\2\u016b\u0163\3\2\2\2\u016b\u0164\3\2\2\2\u016cz")
        buf.write("\3\2\2\2\u016d\u016f\5y=\2\u016e\u016d\3\2\2\2\u016e\u016f")
        buf.write("\3\2\2\2\u016f\u0170\3\2\2\2\u0170\u0172\7\60\2\2\u0171")
        buf.write("\u0173\4\62;\2\u0172\u0171\3\2\2\2\u0173\u0174\3\2\2\2")
        buf.write("\u0174\u0172\3\2\2\2\u0174\u0175\3\2\2\2\u0175\u017f\3")
        buf.write("\2\2\2\u0176\u0178\t\4\2\2\u0177\u0179\t\5\2\2\u0178\u0177")
        buf.write("\3\2\2\2\u0178\u0179\3\2\2\2\u0179\u017b\3\2\2\2\u017a")
        buf.write("\u017c\4\62;\2\u017b\u017a\3\2\2\2\u017c\u017d\3\2\2\2")
        buf.write("\u017d\u017b\3\2\2\2\u017d\u017e\3\2\2\2\u017e\u0180\3")
        buf.write("\2\2\2\u017f\u0176\3\2\2\2\u017f\u0180\3\2\2\2\u0180|")
        buf.write("\3\2\2\2\u0181\u0182\7\60\2\2\u0182\u0183\7\60\2\2\u0183")
        buf.write("~\3\2\2\2\u0184\u018a\7$\2\2\u0185\u0186\7^\2\2\u0186")
        buf.write("\u0189\13\2\2\2\u0187\u0189\n\6\2\2\u0188\u0185\3\2\2")
        buf.write("\2\u0188\u0187\3\2\2\2\u0189\u018c\3\2\2\2\u018a\u0188")
        buf.write("\3\2\2\2\u018a\u018b\3\2\2\2\u018b\u018d\3\2\2\2\u018c")
        buf.write("\u018a\3\2\2\2\u018d\u018e\7$\2\2\u018e\u0080\3\2\2\2")
        buf.write("\u018f\u0195\7)\2\2\u0190\u0191\7)\2\2\u0191\u0194\7)")
        buf.write("\2\2\u0192\u0194\n\7\2\2\u0193\u0190\3\2\2\2\u0193\u0192")
        buf.write("\3\2\2\2\u0194\u0197\3\2\2\2\u0195\u0193\3\2\2\2\u0195")
        buf.write("\u0196\3\2\2\2\u0196\u0198\3\2\2\2\u0197\u0195\3\2\2\2")
        buf.write("\u0198\u0199\7)\2\2\u0199\u0082\3\2\2\2\u019a\u019b\7")
        buf.write("\61\2\2\u019b\u019c\7\61\2\2\u019c\u01a0\3\2\2\2\u019d")
        buf.write("\u019f\n\b\2\2\u019e\u019d\3\2\2\2\u019f\u01a2\3\2\2\2")
        buf.write("\u01a0\u019e\3\2\2\2\u01a0\u01a1\3\2\2\2\u01a1\u01a3\3")
        buf.write("\2\2\2\u01a2\u01a0\3\2\2\2\u01a3\u01a4\bB\2\2\u01a4\u0084")
        buf.write("\3\2\2\2\u01a5\u01a6\7\61\2\2\u01a6\u01a7\7,\2\2\u01a7")
        buf.write("\u01b1\3\2\2\2\u01a8\u01b0\n\t\2\2\u01a9\u01ab\7,\2\2")
        buf.write("\u01aa\u01a9\3\2\2\2\u01ab\u01ac\3\2\2\2\u01ac\u01aa\3")
        buf.write("\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01ae\3\2\2\2\u01ae\u01b0")
        buf.write("\n\n\2\2\u01af\u01a8\3\2\2\2\u01af\u01aa\3\2\2\2\u01b0")
        buf.write("\u01b3\3\2\2\2\u01b1\u01af\3\2\2\2\u01b1\u01b2\3\2\2\2")
        buf.write("\u01b2\u01b5\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b4\u01b6\7")
        buf.write(",\2\2\u01b5\u01b4\3\2\2\2\u01b6\u01b7\3\2\2\2\u01b7\u01b5")
        buf.write("\3\2\2\2\u01b7\u01b8\3\2\2\2\u01b8\u01b9\3\2\2\2\u01b9")
        buf.write("\u01ba\7\61\2\2\u01ba\u01bb\3\2\2\2\u01bb\u01bc\bC\2\2")
        buf.write("\u01bc\u0086\3\2\2\2\u01bd\u01bf\t\13\2\2\u01be\u01bd")
        buf.write("\3\2\2\2\u01bf\u01c0\3\2\2\2\u01c0\u01be\3\2\2\2\u01c0")
        buf.write("\u01c1\3\2\2\2\u01c1\u01c2\3\2\2\2\u01c2\u01c3\bD\2\2")
        buf.write("\u01c3\u0088\3\2\2\2\25\2\u0160\u0168\u016b\u016e\u0174")
        buf.write("\u0178\u017d\u017f\u0188\u018a\u0193\u0195\u01a0\u01ac")
        buf.write("\u01af\u01b1\u01b7\u01c0\3\b\2\2")
        return buf.getvalue()


class SetlXgrammarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    T__55 = 56
    T__56 = 57
    T__57 = 58
    ID = 59
    NUMBER = 60
    DOUBLE = 61
    RANGE_SIGN = 62
    STRING = 63
    LITERAL = 64
    LINE_COMMENT = 65
    MULTI_COMMENT = 66
    WS = 67

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'if'", "'('", "')'", "'{'", "'}'", "'else'", "'switch'", "'case'", 
            "':'", "'default'", "'for'", "'|'", "'while'", "'do'", "';'", 
            "'backtrack'", "'break'", "'continue'", "'exit'", "'return'", 
            "'+='", "'-='", "'*='", "'/='", "'\\='", "'%='", "':='", "'.'", 
            "'['", "']'", "'_'", "','", "'<==>'", "'<!=>'", "'=>'", "'||'", 
            "'&&'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'in'", 
            "'notin'", "'+'", "'-'", "'*'", "'/'", "'\\'", "'%'", "'**'", 
            "'!'", "'procedure'", "'rw'", "'om'", "'true'", "'false'", "'..'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "NUMBER", "DOUBLE", "RANGE_SIGN", "STRING", "LITERAL", 
            "LINE_COMMENT", "MULTI_COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", 
                  "T__56", "T__57", "ID", "NUMBER", "DOUBLE", "RANGE_SIGN", 
                  "STRING", "LITERAL", "LINE_COMMENT", "MULTI_COMMENT", 
                  "WS" ]

    grammarFileName = "SetlXgrammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


