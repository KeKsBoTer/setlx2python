# Generated from SetlXgrammar.g4 by ANTLR 4.7.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2D")
        buf.write("\u01bf\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7")
        buf.write("\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3")
        buf.write("\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13")
        buf.write("\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16")
        buf.write("\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26")
        buf.write("\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32")
        buf.write("\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36")
        buf.write("\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3\"\3\"\3\"\3#\3#")
        buf.write("\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3(\3")
        buf.write("(\3(\3)\3)\3*\3*\3*\3+\3+\3,\3,\3,\3-\3-\3-\3.\3.\3.\3")
        buf.write(".\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63")
        buf.write("\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\67\3\67\3\67\3\67")
        buf.write("\3\67\3\67\3\67\3\67\3\67\3\67\38\38\38\39\39\39\39\3")
        buf.write("9\3:\3:\3:\3:\3:\3:\3;\3;\7;\u015a\n;\f;\16;\u015d\13")
        buf.write(";\3<\3<\3<\7<\u0162\n<\f<\16<\u0165\13<\5<\u0167\n<\3")
        buf.write("=\5=\u016a\n=\3=\3=\6=\u016e\n=\r=\16=\u016f\3=\3=\5=")
        buf.write("\u0174\n=\3=\6=\u0177\n=\r=\16=\u0178\5=\u017b\n=\3>\3")
        buf.write(">\3>\3?\3?\3?\3?\7?\u0184\n?\f?\16?\u0187\13?\3?\3?\3")
        buf.write("@\3@\3@\3@\7@\u018f\n@\f@\16@\u0192\13@\3@\3@\3A\3A\3")
        buf.write("A\3A\7A\u019a\nA\fA\16A\u019d\13A\3A\3A\3B\3B\3B\3B\3")
        buf.write("B\6B\u01a6\nB\rB\16B\u01a7\3B\7B\u01ab\nB\fB\16B\u01ae")
        buf.write("\13B\3B\6B\u01b1\nB\rB\16B\u01b2\3B\3B\3B\3B\3C\6C\u01ba")
        buf.write("\nC\rC\16C\u01bb\3C\3C\2\2D\3\3\5\4\7\5\t\6\13\7\r\b\17")
        buf.write("\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23")
        buf.write("%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36")
        buf.write(";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63")
        buf.write("e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C")
        buf.write("\u0085D\3\2\f\4\2C\\c|\6\2\62;C\\aac|\4\2GGgg\4\2--//")
        buf.write("\4\2$$^^\3\2))\4\2\f\f\17\17\3\2,,\4\2,,\61\61\5\2\13")
        buf.write("\f\17\17\"\"\2\u01d0\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2")
        buf.write("\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2")
        buf.write("\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31")
        buf.write("\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2")
        buf.write("\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3")
        buf.write("\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2")
        buf.write("\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3")
        buf.write("\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G")
        buf.write("\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2")
        buf.write("Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2")
        buf.write("\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2")
        buf.write("\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2")
        buf.write("\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3")
        buf.write("\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2")
        buf.write("\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\3\u0087")
        buf.write("\3\2\2\2\5\u008a\3\2\2\2\7\u008c\3\2\2\2\t\u008e\3\2\2")
        buf.write("\2\13\u0090\3\2\2\2\r\u0092\3\2\2\2\17\u0097\3\2\2\2\21")
        buf.write("\u009e\3\2\2\2\23\u00a3\3\2\2\2\25\u00a5\3\2\2\2\27\u00ad")
        buf.write("\3\2\2\2\31\u00b1\3\2\2\2\33\u00b3\3\2\2\2\35\u00b9\3")
        buf.write("\2\2\2\37\u00bc\3\2\2\2!\u00be\3\2\2\2#\u00c8\3\2\2\2")
        buf.write("%\u00ce\3\2\2\2\'\u00d7\3\2\2\2)\u00dc\3\2\2\2+\u00e3")
        buf.write("\3\2\2\2-\u00e6\3\2\2\2/\u00e9\3\2\2\2\61\u00ec\3\2\2")
        buf.write("\2\63\u00ef\3\2\2\2\65\u00f2\3\2\2\2\67\u00f5\3\2\2\2")
        buf.write("9\u00f8\3\2\2\2;\u00fa\3\2\2\2=\u00fc\3\2\2\2?\u00fe\3")
        buf.write("\2\2\2A\u0100\3\2\2\2C\u0102\3\2\2\2E\u0107\3\2\2\2G\u010c")
        buf.write("\3\2\2\2I\u010f\3\2\2\2K\u0112\3\2\2\2M\u0115\3\2\2\2")
        buf.write("O\u0118\3\2\2\2Q\u011b\3\2\2\2S\u011d\3\2\2\2U\u0120\3")
        buf.write("\2\2\2W\u0122\3\2\2\2Y\u0125\3\2\2\2[\u0128\3\2\2\2]\u012e")
        buf.write("\3\2\2\2_\u0130\3\2\2\2a\u0132\3\2\2\2c\u0134\3\2\2\2")
        buf.write("e\u0136\3\2\2\2g\u0138\3\2\2\2i\u013a\3\2\2\2k\u013d\3")
        buf.write("\2\2\2m\u013f\3\2\2\2o\u0149\3\2\2\2q\u014c\3\2\2\2s\u0151")
        buf.write("\3\2\2\2u\u0157\3\2\2\2w\u0166\3\2\2\2y\u0169\3\2\2\2")
        buf.write("{\u017c\3\2\2\2}\u017f\3\2\2\2\177\u018a\3\2\2\2\u0081")
        buf.write("\u0195\3\2\2\2\u0083\u01a0\3\2\2\2\u0085\u01b9\3\2\2\2")
        buf.write("\u0087\u0088\7k\2\2\u0088\u0089\7h\2\2\u0089\4\3\2\2\2")
        buf.write("\u008a\u008b\7*\2\2\u008b\6\3\2\2\2\u008c\u008d\7+\2\2")
        buf.write("\u008d\b\3\2\2\2\u008e\u008f\7}\2\2\u008f\n\3\2\2\2\u0090")
        buf.write("\u0091\7\177\2\2\u0091\f\3\2\2\2\u0092\u0093\7g\2\2\u0093")
        buf.write("\u0094\7n\2\2\u0094\u0095\7u\2\2\u0095\u0096\7g\2\2\u0096")
        buf.write("\16\3\2\2\2\u0097\u0098\7u\2\2\u0098\u0099\7y\2\2\u0099")
        buf.write("\u009a\7k\2\2\u009a\u009b\7v\2\2\u009b\u009c\7e\2\2\u009c")
        buf.write("\u009d\7j\2\2\u009d\20\3\2\2\2\u009e\u009f\7e\2\2\u009f")
        buf.write("\u00a0\7c\2\2\u00a0\u00a1\7u\2\2\u00a1\u00a2\7g\2\2\u00a2")
        buf.write("\22\3\2\2\2\u00a3\u00a4\7<\2\2\u00a4\24\3\2\2\2\u00a5")
        buf.write("\u00a6\7f\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7h\2\2\u00a8")
        buf.write("\u00a9\7c\2\2\u00a9\u00aa\7w\2\2\u00aa\u00ab\7n\2\2\u00ab")
        buf.write("\u00ac\7v\2\2\u00ac\26\3\2\2\2\u00ad\u00ae\7h\2\2\u00ae")
        buf.write("\u00af\7q\2\2\u00af\u00b0\7t\2\2\u00b0\30\3\2\2\2\u00b1")
        buf.write("\u00b2\7~\2\2\u00b2\32\3\2\2\2\u00b3\u00b4\7y\2\2\u00b4")
        buf.write("\u00b5\7j\2\2\u00b5\u00b6\7k\2\2\u00b6\u00b7\7n\2\2\u00b7")
        buf.write("\u00b8\7g\2\2\u00b8\34\3\2\2\2\u00b9\u00ba\7f\2\2\u00ba")
        buf.write("\u00bb\7q\2\2\u00bb\36\3\2\2\2\u00bc\u00bd\7=\2\2\u00bd")
        buf.write(" \3\2\2\2\u00be\u00bf\7d\2\2\u00bf\u00c0\7c\2\2\u00c0")
        buf.write("\u00c1\7e\2\2\u00c1\u00c2\7m\2\2\u00c2\u00c3\7v\2\2\u00c3")
        buf.write("\u00c4\7t\2\2\u00c4\u00c5\7c\2\2\u00c5\u00c6\7e\2\2\u00c6")
        buf.write("\u00c7\7m\2\2\u00c7\"\3\2\2\2\u00c8\u00c9\7d\2\2\u00c9")
        buf.write("\u00ca\7t\2\2\u00ca\u00cb\7g\2\2\u00cb\u00cc\7c\2\2\u00cc")
        buf.write("\u00cd\7m\2\2\u00cd$\3\2\2\2\u00ce\u00cf\7e\2\2\u00cf")
        buf.write("\u00d0\7q\2\2\u00d0\u00d1\7p\2\2\u00d1\u00d2\7v\2\2\u00d2")
        buf.write("\u00d3\7k\2\2\u00d3\u00d4\7p\2\2\u00d4\u00d5\7w\2\2\u00d5")
        buf.write("\u00d6\7g\2\2\u00d6&\3\2\2\2\u00d7\u00d8\7g\2\2\u00d8")
        buf.write("\u00d9\7z\2\2\u00d9\u00da\7k\2\2\u00da\u00db\7v\2\2\u00db")
        buf.write("(\3\2\2\2\u00dc\u00dd\7t\2\2\u00dd\u00de\7g\2\2\u00de")
        buf.write("\u00df\7v\2\2\u00df\u00e0\7w\2\2\u00e0\u00e1\7t\2\2\u00e1")
        buf.write("\u00e2\7p\2\2\u00e2*\3\2\2\2\u00e3\u00e4\7-\2\2\u00e4")
        buf.write("\u00e5\7?\2\2\u00e5,\3\2\2\2\u00e6\u00e7\7/\2\2\u00e7")
        buf.write("\u00e8\7?\2\2\u00e8.\3\2\2\2\u00e9\u00ea\7,\2\2\u00ea")
        buf.write("\u00eb\7?\2\2\u00eb\60\3\2\2\2\u00ec\u00ed\7\61\2\2\u00ed")
        buf.write("\u00ee\7?\2\2\u00ee\62\3\2\2\2\u00ef\u00f0\7^\2\2\u00f0")
        buf.write("\u00f1\7?\2\2\u00f1\64\3\2\2\2\u00f2\u00f3\7\'\2\2\u00f3")
        buf.write("\u00f4\7?\2\2\u00f4\66\3\2\2\2\u00f5\u00f6\7<\2\2\u00f6")
        buf.write("\u00f7\7?\2\2\u00f78\3\2\2\2\u00f8\u00f9\7\60\2\2\u00f9")
        buf.write(":\3\2\2\2\u00fa\u00fb\7]\2\2\u00fb<\3\2\2\2\u00fc\u00fd")
        buf.write("\7_\2\2\u00fd>\3\2\2\2\u00fe\u00ff\7a\2\2\u00ff@\3\2\2")
        buf.write("\2\u0100\u0101\7.\2\2\u0101B\3\2\2\2\u0102\u0103\7>\2")
        buf.write("\2\u0103\u0104\7?\2\2\u0104\u0105\7?\2\2\u0105\u0106\7")
        buf.write("@\2\2\u0106D\3\2\2\2\u0107\u0108\7>\2\2\u0108\u0109\7")
        buf.write("#\2\2\u0109\u010a\7?\2\2\u010a\u010b\7@\2\2\u010bF\3\2")
        buf.write("\2\2\u010c\u010d\7?\2\2\u010d\u010e\7@\2\2\u010eH\3\2")
        buf.write("\2\2\u010f\u0110\7~\2\2\u0110\u0111\7~\2\2\u0111J\3\2")
        buf.write("\2\2\u0112\u0113\7(\2\2\u0113\u0114\7(\2\2\u0114L\3\2")
        buf.write("\2\2\u0115\u0116\7?\2\2\u0116\u0117\7?\2\2\u0117N\3\2")
        buf.write("\2\2\u0118\u0119\7#\2\2\u0119\u011a\7?\2\2\u011aP\3\2")
        buf.write("\2\2\u011b\u011c\7>\2\2\u011cR\3\2\2\2\u011d\u011e\7>")
        buf.write("\2\2\u011e\u011f\7?\2\2\u011fT\3\2\2\2\u0120\u0121\7@")
        buf.write("\2\2\u0121V\3\2\2\2\u0122\u0123\7@\2\2\u0123\u0124\7?")
        buf.write("\2\2\u0124X\3\2\2\2\u0125\u0126\7k\2\2\u0126\u0127\7p")
        buf.write("\2\2\u0127Z\3\2\2\2\u0128\u0129\7p\2\2\u0129\u012a\7q")
        buf.write("\2\2\u012a\u012b\7v\2\2\u012b\u012c\7k\2\2\u012c\u012d")
        buf.write("\7p\2\2\u012d\\\3\2\2\2\u012e\u012f\7-\2\2\u012f^\3\2")
        buf.write("\2\2\u0130\u0131\7/\2\2\u0131`\3\2\2\2\u0132\u0133\7,")
        buf.write("\2\2\u0133b\3\2\2\2\u0134\u0135\7\61\2\2\u0135d\3\2\2")
        buf.write("\2\u0136\u0137\7^\2\2\u0137f\3\2\2\2\u0138\u0139\7\'\2")
        buf.write("\2\u0139h\3\2\2\2\u013a\u013b\7,\2\2\u013b\u013c\7,\2")
        buf.write("\2\u013cj\3\2\2\2\u013d\u013e\7#\2\2\u013el\3\2\2\2\u013f")
        buf.write("\u0140\7r\2\2\u0140\u0141\7t\2\2\u0141\u0142\7q\2\2\u0142")
        buf.write("\u0143\7e\2\2\u0143\u0144\7g\2\2\u0144\u0145\7f\2\2\u0145")
        buf.write("\u0146\7w\2\2\u0146\u0147\7t\2\2\u0147\u0148\7g\2\2\u0148")
        buf.write("n\3\2\2\2\u0149\u014a\7q\2\2\u014a\u014b\7o\2\2\u014b")
        buf.write("p\3\2\2\2\u014c\u014d\7v\2\2\u014d\u014e\7t\2\2\u014e")
        buf.write("\u014f\7w\2\2\u014f\u0150\7g\2\2\u0150r\3\2\2\2\u0151")
        buf.write("\u0152\7h\2\2\u0152\u0153\7c\2\2\u0153\u0154\7n\2\2\u0154")
        buf.write("\u0155\7u\2\2\u0155\u0156\7g\2\2\u0156t\3\2\2\2\u0157")
        buf.write("\u015b\t\2\2\2\u0158\u015a\t\3\2\2\u0159\u0158\3\2\2\2")
        buf.write("\u015a\u015d\3\2\2\2\u015b\u0159\3\2\2\2\u015b\u015c\3")
        buf.write("\2\2\2\u015cv\3\2\2\2\u015d\u015b\3\2\2\2\u015e\u0167")
        buf.write("\7\62\2\2\u015f\u0163\4\63;\2\u0160\u0162\4\62;\2\u0161")
        buf.write("\u0160\3\2\2\2\u0162\u0165\3\2\2\2\u0163\u0161\3\2\2\2")
        buf.write("\u0163\u0164\3\2\2\2\u0164\u0167\3\2\2\2\u0165\u0163\3")
        buf.write("\2\2\2\u0166\u015e\3\2\2\2\u0166\u015f\3\2\2\2\u0167x")
        buf.write("\3\2\2\2\u0168\u016a\5w<\2\u0169\u0168\3\2\2\2\u0169\u016a")
        buf.write("\3\2\2\2\u016a\u016b\3\2\2\2\u016b\u016d\7\60\2\2\u016c")
        buf.write("\u016e\4\62;\2\u016d\u016c\3\2\2\2\u016e\u016f\3\2\2\2")
        buf.write("\u016f\u016d\3\2\2\2\u016f\u0170\3\2\2\2\u0170\u017a\3")
        buf.write("\2\2\2\u0171\u0173\t\4\2\2\u0172\u0174\t\5\2\2\u0173\u0172")
        buf.write("\3\2\2\2\u0173\u0174\3\2\2\2\u0174\u0176\3\2\2\2\u0175")
        buf.write("\u0177\4\62;\2\u0176\u0175\3\2\2\2\u0177\u0178\3\2\2\2")
        buf.write("\u0178\u0176\3\2\2\2\u0178\u0179\3\2\2\2\u0179\u017b\3")
        buf.write("\2\2\2\u017a\u0171\3\2\2\2\u017a\u017b\3\2\2\2\u017bz")
        buf.write("\3\2\2\2\u017c\u017d\7\60\2\2\u017d\u017e\7\60\2\2\u017e")
        buf.write("|\3\2\2\2\u017f\u0185\7$\2\2\u0180\u0181\7^\2\2\u0181")
        buf.write("\u0184\13\2\2\2\u0182\u0184\n\6\2\2\u0183\u0180\3\2\2")
        buf.write("\2\u0183\u0182\3\2\2\2\u0184\u0187\3\2\2\2\u0185\u0183")
        buf.write("\3\2\2\2\u0185\u0186\3\2\2\2\u0186\u0188\3\2\2\2\u0187")
        buf.write("\u0185\3\2\2\2\u0188\u0189\7$\2\2\u0189~\3\2\2\2\u018a")
        buf.write("\u0190\7)\2\2\u018b\u018c\7)\2\2\u018c\u018f\7)\2\2\u018d")
        buf.write("\u018f\n\7\2\2\u018e\u018b\3\2\2\2\u018e\u018d\3\2\2\2")
        buf.write("\u018f\u0192\3\2\2\2\u0190\u018e\3\2\2\2\u0190\u0191\3")
        buf.write("\2\2\2\u0191\u0193\3\2\2\2\u0192\u0190\3\2\2\2\u0193\u0194")
        buf.write("\7)\2\2\u0194\u0080\3\2\2\2\u0195\u0196\7\61\2\2\u0196")
        buf.write("\u0197\7\61\2\2\u0197\u019b\3\2\2\2\u0198\u019a\n\b\2")
        buf.write("\2\u0199\u0198\3\2\2\2\u019a\u019d\3\2\2\2\u019b\u0199")
        buf.write("\3\2\2\2\u019b\u019c\3\2\2\2\u019c\u019e\3\2\2\2\u019d")
        buf.write("\u019b\3\2\2\2\u019e\u019f\bA\2\2\u019f\u0082\3\2\2\2")
        buf.write("\u01a0\u01a1\7\61\2\2\u01a1\u01a2\7,\2\2\u01a2\u01ac\3")
        buf.write("\2\2\2\u01a3\u01ab\n\t\2\2\u01a4\u01a6\7,\2\2\u01a5\u01a4")
        buf.write("\3\2\2\2\u01a6\u01a7\3\2\2\2\u01a7\u01a5\3\2\2\2\u01a7")
        buf.write("\u01a8\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9\u01ab\n\n\2\2")
        buf.write("\u01aa\u01a3\3\2\2\2\u01aa\u01a5\3\2\2\2\u01ab\u01ae\3")
        buf.write("\2\2\2\u01ac\u01aa\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01b0")
        buf.write("\3\2\2\2\u01ae\u01ac\3\2\2\2\u01af\u01b1\7,\2\2\u01b0")
        buf.write("\u01af\3\2\2\2\u01b1\u01b2\3\2\2\2\u01b2\u01b0\3\2\2\2")
        buf.write("\u01b2\u01b3\3\2\2\2\u01b3\u01b4\3\2\2\2\u01b4\u01b5\7")
        buf.write("\61\2\2\u01b5\u01b6\3\2\2\2\u01b6\u01b7\bB\2\2\u01b7\u0084")
        buf.write("\3\2\2\2\u01b8\u01ba\t\13\2\2\u01b9\u01b8\3\2\2\2\u01ba")
        buf.write("\u01bb\3\2\2\2\u01bb\u01b9\3\2\2\2\u01bb\u01bc\3\2\2\2")
        buf.write("\u01bc\u01bd\3\2\2\2\u01bd\u01be\bC\2\2\u01be\u0086\3")
        buf.write("\2\2\2\25\2\u015b\u0163\u0166\u0169\u016f\u0173\u0178")
        buf.write("\u017a\u0183\u0185\u018e\u0190\u019b\u01a7\u01aa\u01ac")
        buf.write("\u01b2\u01bb\3\b\2\2")
        return buf.getvalue()


class SetlXgrammarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    T__55 = 56
    T__56 = 57
    ID = 58
    NUMBER = 59
    DOUBLE = 60
    RANGE_SIGN = 61
    STRING = 62
    LITERAL = 63
    LINE_COMMENT = 64
    MULTI_COMMENT = 65
    WS = 66

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'if'", "'('", "')'", "'{'", "'}'", "'else'", "'switch'", "'case'", 
            "':'", "'default'", "'for'", "'|'", "'while'", "'do'", "';'", 
            "'backtrack'", "'break'", "'continue'", "'exit'", "'return'", 
            "'+='", "'-='", "'*='", "'/='", "'\\='", "'%='", "':='", "'.'", 
            "'['", "']'", "'_'", "','", "'<==>'", "'<!=>'", "'=>'", "'||'", 
            "'&&'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'in'", 
            "'notin'", "'+'", "'-'", "'*'", "'/'", "'\\'", "'%'", "'**'", 
            "'!'", "'procedure'", "'om'", "'true'", "'false'", "'..'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "NUMBER", "DOUBLE", "RANGE_SIGN", "STRING", "LITERAL", 
            "LINE_COMMENT", "MULTI_COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", 
                  "T__56", "ID", "NUMBER", "DOUBLE", "RANGE_SIGN", "STRING", 
                  "LITERAL", "LINE_COMMENT", "MULTI_COMMENT", "WS" ]

    grammarFileName = "SetlXgrammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


