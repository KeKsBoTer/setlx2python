
// Compute the set of primes recursively using the algorithm of Eratosthenes.
// 
allPrimes := procedure(numbers) {
    if (numbers == []) {
        return [];
    }
    firstElement := numbers[1];
    return [ first ] + allPrimes([ n : n in numbers[2..] | n % firstElement != 0 ]);
};
n := 10000;
startTime := now();
primes := allPrimes([2 .. n]);
stopTime := now();
print(primes);
print("computation took $stopTime - startTime$ milliseconds");
