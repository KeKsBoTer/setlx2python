// Names is a list of strings of the same length as Grades, while grades is a list of numbers.
// These numbers are associated with the names.  Initially, Names is sorted alphabetically.
// This procedure returns a pair of lists of the form
//         [SortedNames, SortedGrades]
// sucht that the pairs are sorted with respect to the numbers in grades.  The sublists of
// Names with the same grade are still sorted alphabetically.
countingSort := procedure(Names, Grades) {
    assert(#Names == #Grades, "$#Names$ != $#Grades$");
    maxGrade     := max(Grades);
    Counts       := [0] * maxGrade;
    Indices      := [];
    SortedNames  := [];
    SortedGrades := [];
    for (g in Grades) {
        Counts[g] += 1;
    }
    Indices[1] := 1;
    for (g in [2 .. maxGrade]) {
        Indices[g] := Indices[g-1] + Counts[g-1];
    }
    for (i in [1 .. #Names]) {
        g     := Grades[i];
        index := Indices[g];
        SortedNames [index] := Names[i];
        SortedGrades[index] := Grades[i];
        Indices[g]          += 1;
    }
    return [SortedNames, SortedGrades];
};
