/**
 * Calculate ln(2) using the Monte-Carlo method
 * @param   n: number of trials
 * @return  an approximation of ln(2)
 */
approximateLn2 := procedure(n) {
    k := 0;  // k is the number of points that are under the hyperbola
    i := 0;
    while (i < n) {
        x := random() + 1;
        y := random();
        if (x * y <= 1) {
            k += 1;
        }
        i += 1;
    }
    return 1.0 * k / n;
};

main := procedure() {
    n := 10; 
    i := 7;
    while (n < 1000000000000) {
        p   := approximateLn2(n);
        ln2 := log(2); 
        blanks := " " * i;
        print("n = $blanks$ $n$: p = $blanks$ $p$, error = $p - ln2$\n");
        n *= 10;
        i -= 1;
    }
};

ln2 := approximateLn2(9 * 0.7 * 0.3 * 10**6);
print("ln(2) = $ln2$, error = $ln2 - log(2)$\n");

main();

