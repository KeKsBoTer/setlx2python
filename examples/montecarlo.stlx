// this program computes pi using a monte carlo algorithm which uses random()
//==============================================================================
// Essentially it creates random points in a coordinate system,
// with 0 <= x <=1 and 0 <= y <=1 and computes if they are within a unit circle
// with is centered at 0,0.
//
// number of points within this cirle devided by all points is around a
// quarter of pi

// how many random points to create?
n := 50000;

// number of points found to be in the circle
inCircle := 0;

for (x in [1 .. n]) {
    // is this random point in circle?
    if ( sqrt(random() ** 2 + random() ** 2) <= 1) {
        inCircle += 1;
    }
}

pseudoPi := 4 * inCircle / n;

print("pi := $ pseudoPi $ (or $ nDecimalPlaces(pseudoPi, 5) $), which is almost $mathConst(\"pi\")$");
